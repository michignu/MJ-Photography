{"ast":null,"code":"import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    // References\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n    storageRef.put(file).on('state_changed', snap => {\n      // Update progress with bytes transferred\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      collectionRef.add({\n        url,\n        createdAt\n      });\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["F:/dev/Webdev/MJ Photography/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFirestore","timestamp","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","add","createdAt"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,SAA3C,QAA4D,oBAA5D;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMY,UAAU,GAAGX,cAAc,CAACY,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB;AACA,UAAMC,aAAa,GAAGb,gBAAgB,CAACc,UAAjB,CAA4B,QAA5B,CAAtB;AACAJ,IAAAA,UAAU,CAACK,GAAX,CAAeZ,IAAf,EAAqBa,EAArB,CAAwB,eAAxB,EAA0CC,IAAD,IAAU;AAC/C;AACA,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAf,MAAAA,WAAW,CAACa,UAAD,CAAX;AACH,KAJD,EAIIG,GAAD,IAAS;AACRd,MAAAA,QAAQ,CAACc,GAAD,CAAR;AACH,KAND,EAMG,YAAY;AACX,YAAMb,GAAG,GAAG,MAAME,UAAU,CAACY,cAAX,EAAlB;AACAT,MAAAA,aAAa,CAACU,GAAd,CAAkB;AAAEf,QAAAA,GAAF;AAAOgB,QAAAA;AAAP,OAAlB;AACAf,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH,KAVD;AAWH,GAfQ,EAeN,CAACL,IAAD,CAfM,CAAT;AAiBA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AACH,CAvBD;;AAyBA,eAAeJ,UAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // References\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            // Update progress with bytes transferred\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            collectionRef.add({ url, createdAt });\r\n            setUrl(url);\r\n        })\r\n    }, [file]);\r\n\r\n    return { progress, url, error }\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}